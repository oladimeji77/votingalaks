name: Python package
on: [push]
jobs:
  build:
    environment: 
      - name: testing
    env: 
      DATABASE_HOSTNAME: {{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: {{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: {{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: {{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: {{secrets.DATABASE_USERNAME}}
      SECRET_KEY: {{secrets.SECRET_KEY}}
      ALGORITHM: {{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: {{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      project_title: Voting Online Noun
      project_version: 2.1
    services:      
      postgres:        
        image: postgres        
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: zendb
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v4
        with:          
          python-version: '3.11.3'  
      - name: Echo something
        run: python --version
      - name: Upgrade PIP
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run the application
        run: pip freeze

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment: 
      - name: production
    steps:
      - uses: actions/checkout@v4
      - name: Echo wassup
        run: echo "welcome to the main deployment"
      # To add a remote server such as ubuntu on Azure/aws/gcp 
      # - name: executing remote ssh commands using password
      # uses: appleboy/ssh-action@v1.0.3
      # with:
      #   host: ${{ secrets.HOST }}
      #   username: ${{ secrets.USERNAME }}
      #   password: ${{ secrets.PASSWORD }}
      #   port: ${{ secrets.PORT }}
      #   script: |
      #     whoami
      #     cd app/src
      #     git pull
      #     sudo systemctl restart api